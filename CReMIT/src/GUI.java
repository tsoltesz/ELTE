
import java.awt.Color;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.nio.file.Files;
import javax.swing.JFileChooser;
import javax.swing.JFrame;




/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author TeszTa
 */
public class GUI extends javax.swing.JFrame {

    
    //Felület kezelése:
    int eredetiX, eredetiY, eredetiablakX, eredetiablakY;
    
    
    //CREMIT
    int J, I, kezd, ciklus, sorokszama;
    String datum[], szarmaztatott, kiCremit[][], evY[][]; // ki cremit-->y értékek(1) ls évszám(0) //evY végleges cremit (0)idő (1)x (2)y 
    double eredeti[], kor[];
    
    
    //SZMI
    String eredmeny;
    int n, tizedesdb;
    double var[],eredeti2[];
    public GUI() {
        initComponents();
        setBackground(new Color(0,0,0,0));
        setLocationRelativeTo(null);
        sorokszama=0;
        masikpanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cremitfv = new javax.swing.ButtonGroup();
        masikfv = new javax.swing.ButtonGroup();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        alappanel = new javax.swing.JPanel();
        masikpanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jRadioButton4 = new javax.swing.JRadioButton();
        eredet2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        nagyN = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        tizjegy = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cremitpanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        eredeti1 = new javax.swing.JTextField();
        talloz1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        MaxI = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        MaxJ = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        SPBE = new javax.swing.JTextField();
        sziklus = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        mehet1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        szarm1 = new javax.swing.JTextField();
        talloz2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        Alap = new javax.swing.JLabel();
        cremitFUL = new javax.swing.JLabel();
        masikFUL = new javax.swing.JLabel();
        Bezar = new javax.swing.JLabel();
        Talcara = new javax.swing.JLabel();
        Mozgas = new javax.swing.JLabel();
        jelento = new javax.swing.JLabel();
        jelentes = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setForeground(new java.awt.Color(0, 255, 255));
        jLabel7.setText("CReMIT");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, -1, -1));

        jLabel8.setText("SZM I");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, -1, -1));

        alappanel.setOpaque(false);

        masikpanel.setOpaque(false);

        jLabel9.setForeground(new java.awt.Color(0, 255, 255));
        jLabel9.setText("Eredeti adatsor :");

        masikfv.add(jRadioButton4);
        jRadioButton4.setForeground(new java.awt.Color(0, 255, 255));
        jRadioButton4.setSelected(true);
        jRadioButton4.setText("Regresszió");

        jButton2.setText("Tallóz");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(0, 255, 255));
        jLabel10.setText("(N) :");

        jButton3.setText("Mehet");
        jButton3.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(0, 255, 255));
        jLabel11.setText("Tizedesjegy pontossága :");

        javax.swing.GroupLayout masikpanelLayout = new javax.swing.GroupLayout(masikpanel);
        masikpanel.setLayout(masikpanelLayout);
        masikpanelLayout.setHorizontalGroup(
            masikpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(masikpanelLayout.createSequentialGroup()
                .addGroup(masikpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(masikpanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eredet2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addGroup(masikpanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jRadioButton4)
                        .addGroup(masikpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(masikpanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, masikpanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                .addGroup(masikpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, masikpanelLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tizjegy, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, masikpanelLayout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nagyN, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap())
        );
        masikpanelLayout.setVerticalGroup(
            masikpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(masikpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(masikpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(eredet2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGroup(masikpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(masikpanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton4))
                    .addGroup(masikpanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(masikpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nagyN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(masikpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tizjegy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(162, Short.MAX_VALUE))
        );

        cremitpanel.setOpaque(false);

        jLabel1.setForeground(new java.awt.Color(0, 255, 255));
        jLabel1.setText("Eredeti adatsor : ");

        talloz1.setText("Tallóz");
        talloz1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                talloz1ActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 255, 255));
        jLabel2.setText("Maximális eltolás (I) :");

        jLabel3.setForeground(new java.awt.Color(0, 255, 255));
        jLabel3.setText("Maximális szélesség (J) :");

        jLabel4.setForeground(new java.awt.Color(0, 255, 255));
        jLabel4.setText("Kezdőpont (SP) :");

        jLabel5.setForeground(new java.awt.Color(0, 255, 255));
        jLabel5.setText("Ciklus :");

        cremitfv.add(jRadioButton1);
        jRadioButton1.setForeground(new java.awt.Color(0, 255, 255));
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Átlag");

        cremitfv.add(jRadioButton2);
        jRadioButton2.setForeground(new java.awt.Color(0, 255, 255));
        jRadioButton2.setText("Maximum");

        cremitfv.add(jRadioButton3);
        jRadioButton3.setForeground(new java.awt.Color(0, 255, 255));
        jRadioButton3.setText("Minimum");

        mehet1.setText("Mehet");
        mehet1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mehet1ActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(0, 255, 255));
        jLabel6.setText("Származtatott idősor :");

        talloz2.setText("Tallóz");
        talloz2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                talloz2ActionPerformed(evt);
            }
        });

        jButton1.setText("<html>Mentés és <br> megnyitás </html>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox1.setForeground(new java.awt.Color(0, 255, 255));
        jCheckBox1.setText("<html>Az idő adatot <br> a file tartalmazza</html>");

        javax.swing.GroupLayout cremitpanelLayout = new javax.swing.GroupLayout(cremitpanel);
        cremitpanel.setLayout(cremitpanelLayout);
        cremitpanelLayout.setHorizontalGroup(
            cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cremitpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cremitpanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(eredeti1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(talloz1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cremitpanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(cremitpanelLayout.createSequentialGroup()
                                .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addGroup(cremitpanelLayout.createSequentialGroup()
                                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(90, 90, 90)
                                        .addComponent(jLabel5)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sziklus, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SPBE, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(cremitpanelLayout.createSequentialGroup()
                                .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MaxJ, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MaxI, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(17, 17, 17)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(cremitpanelLayout.createSequentialGroup()
                .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cremitpanelLayout.createSequentialGroup()
                        .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cremitpanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(szarm1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(talloz2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(cremitpanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mehet1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(cremitpanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton1))))
                .addGap(34, 34, 34))
        );
        cremitpanelLayout.setVerticalGroup(
            cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cremitpanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(eredeti1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(talloz1))
                .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cremitpanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cremitpanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(MaxI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MaxJ, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(SPBE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(sziklus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cremitpanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mehet1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cremitpanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(cremitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(talloz2)
                            .addComponent(szarm1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout alappanelLayout = new javax.swing.GroupLayout(alappanel);
        alappanel.setLayout(alappanelLayout);
        alappanelLayout.setHorizontalGroup(
            alappanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
            .addGroup(alappanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(alappanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(cremitpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(alappanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(alappanelLayout.createSequentialGroup()
                    .addGap(0, 26, Short.MAX_VALUE)
                    .addComponent(masikpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 26, Short.MAX_VALUE)))
        );
        alappanelLayout.setVerticalGroup(
            alappanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
            .addGroup(alappanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(alappanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(cremitpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(alappanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(alappanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(masikpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(alappanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 440, 280));

        Alap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Alap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/alap.png"))); // NOI18N
        Alap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AlapMouseClicked(evt);
            }
        });
        getContentPane().add(Alap, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 80, 534, 344));

        cremitFUL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cremitFUL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/CReMIT-aktiv.png"))); // NOI18N
        cremitFUL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cremitFULMouseClicked(evt);
            }
        });
        getContentPane().add(cremitFUL, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 140, 100));

        masikFUL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        masikFUL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/masik-inaktiv.png"))); // NOI18N
        masikFUL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                masikFULMouseClicked(evt);
            }
        });
        getContentPane().add(masikFUL, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, -1, -1));

        Bezar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Bezar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/bezar-sima.png"))); // NOI18N
        Bezar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                BezarMouseMoved(evt);
            }
        });
        Bezar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BezarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BezarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BezarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BezarMouseReleased(evt);
            }
        });
        getContentPane().add(Bezar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, -1, -1));

        Talcara.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Talcara.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/Talcara-sima.png"))); // NOI18N
        Talcara.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                TalcaraMouseMoved(evt);
            }
        });
        Talcara.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TalcaraMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TalcaraMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TalcaraMousePressed(evt);
            }
        });
        getContentPane().add(Talcara, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, 78, 114));

        Mozgas.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Mozgas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/cipelo-sima.png"))); // NOI18N
        Mozgas.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                MozgasMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                MozgasMouseMoved(evt);
            }
        });
        Mozgas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MozgasMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MozgasMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MozgasMousePressed(evt);
            }
        });
        getContentPane().add(Mozgas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 60));

        jelento.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jelento, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 440, 420, 10));

        jelentes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - sima.png"))); // NOI18N
        jelentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jelentesMouseClicked(evt);
            }
        });
        getContentPane().add(jelentes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 500, 100));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BezarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BezarMouseClicked
        
        System.exit(0);
    }//GEN-LAST:event_BezarMouseClicked

    private void MozgasMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MozgasMouseDragged
       Mozgas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/cipelo-mouseclick.png")));
        setLocation((evt.getXOnScreen()-eredetiX),(evt.getYOnScreen()-eredetiY));
      
        
    }//GEN-LAST:event_MozgasMouseDragged

    private void MozgasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MozgasMouseClicked

        
        
    }//GEN-LAST:event_MozgasMouseClicked

    private void AlapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlapMouseClicked
       
    }//GEN-LAST:event_AlapMouseClicked

    private void masikFULMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masikFULMouseClicked
        cremitpanel.setVisible(false);
        masikpanel.setVisible(true);
        masikFUL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/masik-aktiv.png"))); 
         cremitFUL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/CReMIT-inaktiv.png"))); 
         jLabel7.setForeground(Color.black);
         jLabel8.setForeground(new Color(0,255,255));
    }//GEN-LAST:event_masikFULMouseClicked

    private void cremitFULMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cremitFULMouseClicked
        cremitpanel.setVisible(true);
        masikpanel.setVisible(false);
        masikFUL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/masik-inaktiv.png"))); 
         cremitFUL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/CReMIT-aktiv.png"))); 
         jLabel8.setForeground(Color.black);
         jLabel7.setForeground(new Color(0,255,255));
    }//GEN-LAST:event_cremitFULMouseClicked

    private void TalcaraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TalcaraMouseClicked
        setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_TalcaraMouseClicked

    private void BezarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BezarMouseMoved
      Bezar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/bezar-mouseon.png")));
    }//GEN-LAST:event_BezarMouseMoved

    private void BezarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BezarMouseExited
        Bezar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/bezar-sima.png")));
    }//GEN-LAST:event_BezarMouseExited

    private void BezarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BezarMousePressed
     Bezar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/bezar-mouseclick.png")));
    }//GEN-LAST:event_BezarMousePressed

    private void BezarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BezarMouseReleased
        Bezar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/bezar-mouseon.png")));
    }//GEN-LAST:event_BezarMouseReleased

    private void TalcaraMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TalcaraMouseExited
        Talcara.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/Talcara-sima.png")));
    }//GEN-LAST:event_TalcaraMouseExited

    private void TalcaraMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TalcaraMouseMoved
        Talcara.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/Talcara-mouseon.png")));
    }//GEN-LAST:event_TalcaraMouseMoved

    private void TalcaraMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TalcaraMousePressed
        Talcara.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/Talcara-mouseclick.png")));
    }//GEN-LAST:event_TalcaraMousePressed

    private void mehet1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mehet1ActionPerformed
        String nev=eredeti1.getText();
        if (mehete(nev)){
            
            CREMIT(eredeti);
        }
    }//GEN-LAST:event_mehet1ActionPerformed

    private void talloz1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_talloz1ActionPerformed
        JFileChooser fc=new JFileChooser();
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            eredeti1.setText(fc.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_talloz1ActionPerformed

    private void talloz2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_talloz2ActionPerformed
        JFileChooser fc=new JFileChooser();
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            szarm1.setText(fc.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_talloz2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       kiir(szarm1.getText(),szarmaztatott);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser fc=new JFileChooser();
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            eredet2.setText(fc.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (mehete2(eredet2.getText())){
            SZMI(eredeti2);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void MozgasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MozgasMousePressed
        Mozgas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/cipelo-mouseclick.png")));
        eredetiX=evt.getX();
        eredetiY=evt.getY();
    }//GEN-LAST:event_MozgasMousePressed

    private void MozgasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MozgasMouseExited
        Mozgas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/cipelo-sima.png")));
    }//GEN-LAST:event_MozgasMouseExited

    private void MozgasMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MozgasMouseMoved
        Mozgas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/cipelo-mouseon.png")));
    }//GEN-LAST:event_MozgasMouseMoved

    private void jelentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jelentesMouseClicked
       jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - sima.png")));
       jelento.setText("");
    }//GEN-LAST:event_jelentesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    
    // Felület
    
    public Boolean pontHaromszog(int x, int y){
        if (x<45){
            
        }
        else{
            
        }
        return true;
    }
    
    
    
    
    
    //CREMIT
    
    public void CREMIT(double t[]){ // az idők hozzá fűzése
        try{
       // beolvas(jTextField1.getText());
        String sor;
        String kiiras="";
        kiCremit=new String [(int)(eredeti.length/ciklus)][2];
        kiCremit[0][0]=datum[0].substring(0,4);
        int db=0;
        for (int i=0;i<datum.length;i++){
            if (!kiCremit[db][0].equals(datum[i].substring(0,4))){
                kiCremit[++db][0]=datum[i].substring(0,4);
            }
        }
        for (int i=0;i<=I;i++){
            for (int j=0;j<=J;j++){
                sor="";
                for (int ij=kezd-i;ij<t.length;ij+=ciklus){
                    double tomb [] = new double [j+1]; //fv
                    for (int d=0;d<tomb.length;d++){
                        tomb[d]=t[ij-d];
                      //  System.out.println(d+","+ij);
                      if (d==0){
                          sor+=datum[ij];
                          if (d==tomb.length-1){
                              sor+="\t";
                          }
                      }
                      else if (d==tomb.length-1){
                          sor+="-"+datum[ij-d]+"\t";
                      }
                    }
                     double ertek=F(tomb);  
                    
                     sor+=ertek+"\n";
                     sorokszama++;
                }
               kiiras+=sor+"-"+"\n"; 
            }
            kiiras+="----------------------------"+"\n";
        }
        szarmaztatott=kiiras;
        jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - jo.png")));
        jelento.setText("Kész");
       
        }
        catch(Exception e){
            e.printStackTrace();
            
        }
     
    }
    
    public double F(double tomb[]){
        if (jRadioButton1.isSelected()){
            double atlag=0;
                for (int i=0;i<tomb.length;i++){
                    atlag+=tomb[i];                    
                }           
            atlag/=tomb.length;            
            return atlag;
        }
        else if (jRadioButton2.isSelected()){
            double max=tomb[0];
            for (int i=1;i<tomb.length;i++){
                if (tomb[i]>max){
                    max=tomb[i];
                }
            }
            return max;
        }
        else if (jRadioButton3.isSelected()){
            double min=tomb[0];
            for (int i=1;i<tomb.length;i++){
                if (tomb[i]<min){
                    min=tomb[i];
                }
            }
            return min;
        }
        else {
            return 0;
        }
    }

    public Boolean mehete(String nev){
      
         try{
            String sor;
            BufferedReader br=new BufferedReader(new FileReader(new File(nev)));
            sor=br.readLine();
            if (!jCheckBox1.isSelected()){
            String s[]=sor.split("\t");
            eredeti=new double [s.length];
            for (int i=0;i<eredeti.length;i++){
                eredeti[i]=Double.parseDouble(s[i]);
                
            }
            }
            else{
                int db=1;
                String s[]=sor.split("\t");
                datum=new String[(int)(Files.lines(new File(nev).toPath()).count())];
                eredeti=new double[(int)Files.lines(new File(nev).toPath()).count()];
                datum[0]=s[0];
                eredeti[0]=Double.parseDouble(s[1]);
                while((sor=br.readLine())!=null){
                    s=sor.split("\t");
                    datum[db]=s[0];
                    eredeti[db]=Double.parseDouble(s[1]);
                    db++;
                }
                if (db==1){NullPointerException n=new NullPointerException();throw n;}
            }
            br.close();
           
        }
        catch(Exception e){
            
            jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - hiba.png")));
            jelento.setText("(!) Az eredeti adatsor file-ja nem megfelelő");
            return false;
        }
        try{
            I=Integer.parseInt(MaxI.getText());
        }
        catch (Exception e){
            jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - hiba.png")));
            jelento.setText("(!) Maximális eltolás nem megfelelő");
            return false;
        }
        try{
            J=Integer.parseInt(MaxJ.getText());
        }
        catch (Exception e){
            jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - hiba.png")));
            jelento.setText("(!) Maximális szélesség nem megfelelő");
            return false;
        }
        try{
            ciklus=Integer.parseInt(sziklus.getText());
        }
        catch (Exception e){
            jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - hiba.png")));
            jelento.setText("(!) Ciklus nem megfelelő");
            return false;
        }
        try{
            kezd=Integer.parseInt(SPBE.getText());
        }
        catch (Exception e){
            jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - hiba.png")));
            jelento.setText("(!) Ciklus nem megfelelő");
            return false;
        }
        return true;
    }
    
     public void kiir(String nev, String szoveg){
        try{
            BufferedWriter bw=new BufferedWriter(new FileWriter(new File(nev)));
            bw.write(szoveg);
            bw.close();
            
            VisszaBe();
            
            bw=new BufferedWriter(new FileWriter(new File(nev)));
            int kordb=0;
            for (int i=0;i<evY.length;i++){
                bw.write(evY[i][0]+"\t"+evY[i][1]+"\t"+evY[i][2]);
                if (i%(evY.length/kor.length)==0){
                    bw.write("\t"+kor[kordb]+"");
                    kordb++;
                }
                bw.write("\n");
            }
            bw.close();
            
            Desktop desktop = Desktop.getDesktop(); 
            desktop.open(new File(nev));
            
            jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - jo.png")));
        jelento.setText("Kész");
            
        }
        catch(FileNotFoundException fe){
            jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - hiba.png")));
            jelento.setText("(!) Nem megfelelő útvonal a mentéshez");
        }
        catch(Exception e){
           e.printStackTrace();
            jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - hiba.png")));
            jelento.setText("(!) Hiba történt a file mentése közben");
        }
    }
     
     public void VisszaBe(){
         try{
             evY=new String[sorokszama][4];
             BufferedReader br=new BufferedReader(new FileReader(new File(szarm1.getText())));
             String sor;
             int most=0;
             Boolean dbe=false;
             int db=0;
             while((sor=br.readLine())!=null){
                 if (!sor.equals("----------------------------") && !sor.equals("-") && !sor.equals("")){
                     String vagott[]=sor.split("\t");
                     evY[most][0]=vagott[0];
                     evY[most][1]=vagott[1];
                     most++;
                     
                 }
                 else if (!dbe){
                     db=most;
                     dbe=true;
                 }
             }
             br.close();
             //legnagyobb és legkisebb elem megkeresése
             int mini=0,maxi=0;
             for (int i=0;i<evY.length;i++){
                 if (Double.parseDouble(evY[i][1])<Double.parseDouble(evY[mini][1])){
                     mini=i;
                 }
                 else if (Double.parseDouble(evY[i][1])>Double.parseDouble(evY[maxi][1])){
                     maxi=i;
                 }
             }
             
             // y feltöltése:
             
             for (int i=0;i<kiCremit.length;i++){
                 kiCremit[i][1]=Double.toString(Math.random()*(Double.parseDouble(evY[maxi][1])-Double.parseDouble(evY[mini][1]))+Double.parseDouble(evY[mini][1]));
             }
             
             for (int i=0;i<evY.length;i++){
                 for (int j=0;j<kiCremit.length;j++){
                     if (kiCremit[j][0].equals(evY[i][0].substring(0, 4))){
                         evY[i][2]=kiCremit[j][1];
                         break;
                     }
                 }
             }
             kor=new double[evY.length/db];
             double kortomba[]=new double [db];
             double kortombb[]=new double [db];
             int k=0;
             for (int i=0;i<evY.length;i++){
                 for (int j=0;j<db;j++){
                     if (i>=evY.length){
                         break;
                     }
                     
                     kortomba[j]=Double.parseDouble(evY[i][1]);
                     kortombb[j]=Double.parseDouble(evY[i][2]);
                     i++;
                 }
                 kor[k]=korelacio(kortomba, kortombb);
                 k++;
                 i--;
             }
         }
         catch(Exception e){
             e.printStackTrace();
             throw new NullPointerException();
         }
     }
     
     
     
     //SZMI
     
     public void SZMI(double t[]){
        double min=t[0], max=t[0];
        for (int i=1;i<t.length;i++){
            if (t[i]>max){max=t[i];}
            else if (t[i]<min){min=t[i];}
        }
        double tizedes=Math.pow(10, (-1)*tizedesdb);
        
        double tomb[]=new double [(int)((max-min+1)*(1/tizedes))];
        tomb[0]=min;
        for (int i=1;i<tomb.length;i++){
            tomb[i]=tomb[i-1]+tizedes;
        }
        eredmeny="";
        var=new double [(int)Math.pow(tomb.length,n)];
        ismetlesesvariacio(0, tomb);
      
    }
     
      public void ismetlesesvariacio(int index, double tomb[]){
        
        if (index>=n){
            for (int i=0;i<var.length;i++){
                eredmeny+=var[i]+"\t";
            }
            eredmeny+="\n";
            // ellenorzések
        }
        else {
            for (int i=0;i<tomb.length;i++){
                var[index]=tomb[i];
                ismetlesesvariacio(index+1, tomb);
            }
        }
    }
      
      public double [] regresszio(double x[], double y[]){
          double A=0,B=0,C=0,D=0;
          for (int i=0;i<x.length;i++){
              A+=Math.pow(x[i],2);
              B+=y[i];
              C+=(x[i]*y[i]);
              D+=y[i];
          }
          double t[]=new double[2];
          t[0]=(1/(A*x.length-Math.pow(B,2)))*(C*x.length-B*D);
          t[1]=(1/(A*x.length-Math.pow(B,2)))*((-1)*B*C+A*D);
          return t;
      }
      
      public double korelacio(double a[], double b[]){
          double osszega=0;
          double osszegb=0;
          for (int i=0;i<a.length;i++){
              osszega+=a[i];
              osszegb+=b[i];
          }
          double atlaga=osszega/a.length;
          double atlagab=osszegb/a.length;
          double sigma=0;
          double sigmb=0;
          for (int i=0;i<a.length;i++){
              sigma+=Math.pow(a[i]-atlaga,2);
              sigmb+=Math.pow(b[i]-atlagab,2);
          }
          sigma=Math.sqrt(sigma/(a.length-1));
          sigmb=Math.sqrt(sigmb/(b.length-1));
          
          double kor=0;
          for(int i=0;i<a.length;i++){
              kor+=((a[i]-atlaga)*(b[i]-atlagab));
          }
          kor/=((a.length-1)*sigma*sigmb);
          return (kor*kor);
      }
      
       public Boolean mehete2(String nev){
        try{
            String sor;
            BufferedReader br=new BufferedReader(new FileReader(new File(nev)));
            sor=br.readLine();
           
            String s[]=sor.split("\t");
            eredeti2=new double [s.length];
            for (int i=0;i<eredeti2.length;i++){
                eredeti2[i]=Double.parseDouble(s[i]);
                
            } 
            
        }
        catch(FileNotFoundException fn){
            jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - hiba.png")));
            jelento.setText("(!) Hibás file elérési útvonal");
            return false;
        }
        catch(Exception e){
            jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - hiba.png")));
            jelento.setText("(!) Hiba a file olvasása közbenl");
            return false;
        }
        try{
            n=Integer.parseInt(nagyN.getText());
            if (n<1){throw new Exception();}
        }
        catch(Exception e){
            jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - hiba.png")));
            jelento.setText("(!) 'N' nem megfelelő");
            return false;
        }
        try{
            tizedesdb=Integer.parseInt(tizjegy.getText());
        }
        catch(Exception e){
            jelentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Elemzo/jelento - hiba.png")));
            jelento.setText("(!) Tizedesjegyek száma nem egész");
            return false;
        }
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Alap;
    private javax.swing.JLabel Bezar;
    private javax.swing.JTextField MaxI;
    private javax.swing.JTextField MaxJ;
    private javax.swing.JLabel Mozgas;
    private javax.swing.JTextField SPBE;
    private javax.swing.JLabel Talcara;
    private javax.swing.JPanel alappanel;
    private javax.swing.JLabel cremitFUL;
    private javax.swing.ButtonGroup cremitfv;
    private javax.swing.JPanel cremitpanel;
    private javax.swing.JTextField eredet2;
    private javax.swing.JTextField eredeti1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JLabel jelentes;
    private javax.swing.JLabel jelento;
    private javax.swing.JLabel masikFUL;
    private javax.swing.ButtonGroup masikfv;
    private javax.swing.JPanel masikpanel;
    private javax.swing.JButton mehet1;
    private javax.swing.JTextField nagyN;
    private javax.swing.JTextField szarm1;
    private javax.swing.JTextField sziklus;
    private javax.swing.JButton talloz1;
    private javax.swing.JButton talloz2;
    private javax.swing.JTextField tizjegy;
    // End of variables declaration//GEN-END:variables
}
