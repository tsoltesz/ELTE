
import javax.swing.ImageIcon;

public class SugoGUI extends javax.swing.JFrame {

    /**
     * Creates new form SugoGUI
     */
    public SugoGUI() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/kepek/ikon.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(386, 547));
        setMinimumSize(new java.awt.Dimension(530, 530));
        setName("sugo"); // NOI18N
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(525, 530));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });
        getContentPane().setLayout(null);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(36, 41, 44));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Bahnschrift", 1, 10)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jTextArea1.setText("\n Súgó\n _________________________________________________________________________________________________________\n\n Kedves Felhasználó!\n Köszönjük, hogy megtisztelted játékunkat a bizalmaddal. A program felhasználói és fejlesztői dokumentációját: \n https://docs.google.com/document/d/1NR3_lyd28TD6P8-ehXo_-rixgVs8HF7zA4h4eX9XYtA/edit?usp=sharing\n linken elérve találod meg.\n\n Kilépni a FELÜLETEN végzett kattintás segítségével tudsz innen!\n\n Játék menete:\n Győzd le a másik játékost! Az a felhasználó nyer, aki hamarabb ér a másik fél táborába. A haladásotokat a\n pályán elhelyezett mezők hátráltatják, illetve gyorsítják. Különböző felületű mezőknek más más játékbeli \n tulajdonsága van. \n Dobni az információs panelek között elhelyezett dobókockákkal tudsz, a felületén való kattintással. Azt hogy ki\n következik, a kocka keretének színeezése mutatja, ami feketéről sárgára vált. Nem törvényszerű, hogy\n felváltva következtek a lépésben, az egymásutániságot az alábbi mezők módosíthatják:\n - Zöld mező: Gyógyít, a csatában nyertes fél életerejét tölti vissza legfeljebb maximumra;\n - Föld mező: léptet, a dobás értékén túl plusz lépésekkel segítheti a haladást;\n - Homok mező: Hátráltat, ezen álva a véletlen dönt hogy az adott körben léphetsz-e vagy sem;\n - Kő mező: csata mező, ha mindketten ilyen tipusú mezőn álltok, akkor csatára kerűl sor. Ehhez egy új grafikus\n felület nyílik meg, ezen tudtok megmérközni egymással. Elsőként a pajzs és a fegyver értékek kopnak el a tám-\n adások során, majd a legvégén az élet rovására megy egy-egy támadás. A találat és a védekezés értékét is do-\n bókocka használatával döntjük el.  A nyertes folytathatja útját a táblán, a vesztes azonban a kezdő pozicióra lép;\n - Fém mező: Gépi játék, mikor az egyik játékos a középső területen elhelyezkedő mezők egyikére lép, gépi csat-\n ára kerűl sor. A játékos fél egy ilyen harcból következmények nélkül ki tud szállni, azonban a mezők számából\n kifolyólag egy ilyen mérkőzésre minden képpen sor fog kerűlni. Gépi játék követően, ha a vesztes fél játékos, a\n bábúja újra a kezdő helyen  fog elhelyezkedni, ellenkező esetben haladhat tovább;\n - Teleport: csak 2 darab mező van belőle. A pályán bárhol elhelyezhet, ha erre lép a felhasználó\n \n Menteni a tábla képernyőn van lehetőség. Egy játékmentési hely áll rendelkezésre. Abban az esetben, ha men-\n tésre kerűl a sor, majd lejátszotok egy új játékot, akkor a létrehozott mentésetek elveszik.  Új mentés felűlírja\n a már meglévő mentéseteket.\n Kilépni a tábláról bármikor, az Esc billenytű megnyomásával tudtok. Itt lehetősségetek lesz menteni, \n visszatérni vagy kilépni a játékból. \n A játék alatt zene fut, kikapcsolni a játékon belűl nem lehet. \n\n ");
        jTextArea1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.white));
        jTextArea1.setFocusable(false);
        jTextArea1.setMaximumSize(new java.awt.Dimension(550, 550));
        jTextArea1.setMinimumSize(new java.awt.Dimension(550, 550));
        jTextArea1.setPreferredSize(new java.awt.Dimension(550, 550));
        jTextArea1.setRequestFocusEnabled(false);
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 550, 560);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 386, 547);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        if (evt.getKeyCode()==27){
            System.exit(0);}
    }//GEN-LAST:event_formKeyReleased

    private void jTextArea1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseClicked
        dispose();
    }//GEN-LAST:event_jTextArea1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SugoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SugoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SugoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SugoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SugoGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
